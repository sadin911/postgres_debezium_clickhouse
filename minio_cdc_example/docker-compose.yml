version: "3.8"

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - analytics-network

  # Kafka for streaming
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - analytics-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: abcsvb-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: false
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: debezium-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://debezium-connect:8083
    networks:
      - analytics-network

  # PostgreSQL - Source database for CDC
  postgresql:
    image: postgres:15
    container_name: postgresql
    environment:
      POSTGRES_DB: sourcedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - analytics-network
    command: postgres -c wal_level=logical

  # pgAdmin - Web UI for PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "8091:80"
    depends_on:
      - postgresql
    networks:
      - analytics-network

  # Debezium Connect for CDC (optimized for Apple M4 with JRE 11)
  connect:
    image: debezium/connect:2.4 # Use JRE 11 for better compatibility on Apple M4
    container_name: debezium-connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      STATUS_STORAGE_TOPIC: debezium_status
      # Set DEBEZIUM_LOG_LEVEL to DEBUG or TRACE for more detailed logging if needed
      # DEBEZIUM_LOG_LEVEL: DEBUG
    depends_on:
      - kafka
      - postgresql # Debezium Connect needs to connect to PostgreSQL
    networks:
      - analytics-network
    volumes:
      - ./connectors:/usr/share/confluent-hub-components

  # ClickHouse for analytics
  clickhouse:
    image: clickhouse/clickhouse-server:25.5
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_DB: analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: password
    networks:
      - analytics-network

  minio:
    image: minio/minio:RELEASE.2023-05-04T21-44-30Z # แนะนำให้ใช้ version ที่ใหม่ขึ้น
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/source-bucket;
      /usr/bin/mc policy set public myminio/source-bucket;
      "

volumes:
  clickhouse_data:
  pg_data:

networks:
  analytics-network:
    driver: bridge